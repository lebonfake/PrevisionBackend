{
  "openapi": "3.0.1",
  "info": {
    "title": "PrevisionBackend",
    "version": "1.0"
  },
  "paths": {
    "/api/fermes/without-flux/{fluxId}": {
      "get": {
        "tags": [
          "Fermes"
        ],
        "parameters": [
          {
            "name": "fluxId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FermeReadDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FermeReadDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FermeReadDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/fermes/affecter-fermes": {
      "post": {
        "tags": [
          "Fermes"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AffectFermeRequestDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/AffectFermeRequestDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/AffectFermeRequestDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Flux": {
      "post": {
        "tags": [
          "Flux"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FluxCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/FluxCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/FluxCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/FluxReadDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FluxReadDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/FluxReadDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Flux"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluxReadDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluxReadDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FluxReadDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/permissionprev": {
      "get": {
        "tags": [
          "PermissionPrev"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionPrevReadDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionPrevReadDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/PermissionPrevReadDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/users": {
      "get": {
        "tags": [
          "User"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserReadDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserReadDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/UserReadDto"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/users/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string"
                }
              }
            }
          }
        }
      },
      "put": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "delete": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/api/Validateurs": {
      "post": {
        "tags": [
          "Validateurs"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateurCreateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateurCreateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ValidateurCreateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateurReadDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateurReadDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateurReadDto"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Validateurs"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidateurReadDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidateurReadDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ValidateurReadDto"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/api/Validateurs/{id}": {
      "get": {
        "tags": [
          "Validateurs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateurReadDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateurReadDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ValidateurReadDto"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Validateurs"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "operationId": "GetWeatherForecast",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AffectFermeRequestDto": {
        "required": [
          "fermeId",
          "fluxId"
        ],
        "type": "object",
        "properties": {
          "fermeId": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "fluxId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "EtapeFluxCreateDto": {
        "type": "object",
        "properties": {
          "ordre": {
            "type": "integer",
            "format": "int32"
          },
          "nom": {
            "type": "string",
            "nullable": true
          },
          "etapeFluxValidateurPermissionLinks": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtapeFluxValidateurPermissionLinkDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EtapeFluxValidateurPermissionLinkDto": {
        "required": [
          "permissionPrevId",
          "validateurId"
        ],
        "type": "object",
        "properties": {
          "validateurId": {
            "type": "integer",
            "format": "int32"
          },
          "permissionPrevId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "FermeReadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "nom": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FluxCreateDto": {
        "type": "object",
        "properties": {
          "nom": {
            "type": "string",
            "nullable": true
          },
          "etapeFluxs": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EtapeFluxCreateDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "FluxReadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "nom": {
            "type": "string",
            "nullable": true
          },
          "nombreEtapes": {
            "type": "integer",
            "format": "int32"
          },
          "fermes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FermeReadDto"
            },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PermissionPrevReadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "permissions": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "UserReadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ValidateurCreateDto": {
        "type": "object",
        "properties": {
          "userId": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "ValidateurReadDto": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "lastName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}